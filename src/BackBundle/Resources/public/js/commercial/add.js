var FormValidation = function () {    var regexPassword = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)([-+!*$@%_\w]{6,15})$/;    var regexPhone = /^0[1-9]([0-9]){8}$/;    var regexEmail = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;    var emailValid = false, loginValid = false;    var messagePassword = "Le mot de passe doit comporter au moins 6 caractères, dont un chiffre ou des " +        "caractères spéciaux (-+!*$@%_), une lettre en majuscule et en miniscule";    // basic validation    var checkForm = function () {        // for more info visit the official plugin documentation:         // http://docs.jquery.com/Plugins/Validation        var form = $('#form_validation');        var error = $('.alert-danger', form);        var success = $('.alert-success', form);        function alertMessage(field, message) {            $(field).closest('.form-group').addClass('has-error');            $('.message-error').html(message);            App.scrollTo(error, -200);        }        form.validate({            errorElement: 'span', //default input error message container            errorClass: 'help-block help-block-error', // default input error message class            focusInvalid: false, // do not focus the last invalid input            ignore: "",  // validate all fields including form hidden input            messages: {                select_multi: {                    maxlength: jQuery.validator.format("Max {0} items allowed for selection"),                    minlength: jQuery.validator.format("At least {0} items must be selected")                }            },            rules: {                name: {                    minlength: 2,                    required: true                },                input_group: {                    email: true,                    required: true                },                email: {                    required: true,                    email: true                },                url: {                    required: true,                    url: true                },                number: {                    required: true,                    number: true                },                digits: {                    required: true,                    digits: true                },                creditcard: {                    required: true,                    creditcard: true                },                occupation: {                    minlength: 5,                },                select: {                    required: true                },            },            invalidHandler: function (event, validator) { //display error alert on form submit                              success.hide();                error.show();                $('.message-error').html('Veuillez remplire tous les champs obligatoires.');                App.scrollTo(error, -200);            },            errorPlacement: function (error, element) { // render error placement for each input type                var cont = $(element).parent('.input-group');                if (cont) {                    cont.after(error);                } else {                    element.after(error);                }            },            highlight: function (element) { // hightlight error inputs                $(element)                    .closest('.form-group').addClass('has-error'); // set error class to the control group            },            unhighlight: function (element) { // revert the change done by hightlight                $(element)                    .closest('.form-group').removeClass('has-error'); // set error class to the control group            },            success: function (label) {                label                    .closest('.form-group').removeClass('has-error'); // set success class to the control group            },            submitHandler: function (form) {                if (!loginValid) {                    success.hide();                    error.show();                    alertMessage('.inputLogin', "Ce login est déjà utilisé pour un autre compte.")                } else if (!regexEmail.test($.trim($(".inputEmail").val()))) {                    success.hide();                    error.show();                    alertMessage('.inputEmail', "Veuillez saisir une adresse valide.");                } else if (regexEmail.test($.trim($(".inputEmail").val())) && !emailValid) {                    success.hide();                    error.show();                    alertMessage('.inputEmail', "Cette adresse mail est déjà utilisée pour un autre compte.");                }                else if (!regexPassword.test($.trim($('.inputPassword').val()))) {                    success.hide();                    error.show();                    alertMessage('.inputPassword', messagePassword);                } else if ($.trim($('#passwordConfirmation').val()) != $.trim($('.inputPassword').val())) {                    success.hide();                    error.show();                    alertMessage('#passwordConfirmation', "Veuillez confirmer votre nouveau mot de passe.");                } else if (!regexPhone.test($.trim($(".inputPhone").val())) && $(".inputPhone").val()) {                    success.hide();                    error.show();                    alertMessage('.inputPhone', "Veuillez saisir un numéro de téléphone valide.");                } else {                    success.show();                    error.hide();                    form.submit();                }                // submit the form            }        });    }    var tooltipPassword = function () {        $('.inputPassword,.input_confirmation').tooltip({            'trigger': 'focus',            placement: "bottom",            'title': messagePassword        });    }    var showPassword = function () {        $("#btn_show_pwd").click(function () {            if ($(".inputPassword").attr('type') == "text") {                $(".inputPassword").attr('type', 'password');                $(this).find("small").html('<i class="fa fa-eye"></i>');            } else {                $(this).find("small").html('<i class="fa fa-eye-slash"></i>');                $(".inputPassword").attr('type', 'text');            }        });    };    var checkLogin = function () {        $(".inputLogin").keyup(function () {            var login = $.trim($(this).val());            if (login) {                var href = Routing.generate("back_user_check_username_or_email");                $.getJSON(href, {"user": login}).done(function (data) {                    console.log(data);                    if (data.type == "success" && data.response == false) {                        loginValid = true;                        $(".inputLogin").closest('.form-group').removeClass('has-error');                        $('.login-valid').addClass("hide");                    } else {                        loginValid = false;                        $('.login-valid').removeClass("hide");                        $(".inputLogin").closest('.form-group').addClass('has-error');                    }                });            } else {                loginValid = false;                $('.login-valid').removeClass("hide");                $(".inputLogin").closest('.form-group').addClass('has-error');            }        });    }    var checkMail = function () {        $(".inputEmail").keyup(function () {            var email = $(this).val();            console.log(regexEmail.test(email));            if (regexEmail.test(email)) {                var href = Routing.generate('back_user_check_username_or_email');                $.getJSON(href, {"user": email}).done(function (data) {                    console.log(data);                    if (data.type == "success" && data.response == false) {                        emailValid = true;                        $(".inputEmail").closest('.form-group').removeClass('has-error');                        $('.email-valid').addClass("hide");                    } else {                        emailValid = false;                        $(".inputEmail").closest('.form-group').addClass('has-error');                        $('.email-valid').removeClass("hide");                    }                });            } else {                emailValid = false;                $(".inputEmail").closest('.form-group').addClass('has-error');                $('.email-valid').addClass("hide");            }        });    }    return {        init: function () {            checkForm();            tooltipPassword();            showPassword();            checkLogin();            checkMail();        }    };}();$(function () {    FormValidation.init();});