<?phpnamespace BackBundle\Controller;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\Response;use BackBundle\Entity\User;use Symfony\Component\Ldap\LdapClient;/** * Class UserController * @package BackBundle\Controller * @Route("/user") */class UserController extends Controller{    /**     * @Route("/all", name="back_user_list")     * @param Request $request     * @return Response     */    public function indexAction(Request $request)    {        $ldap = $this->get("ldap_service");        if (!$ldap) {            die("Error");        }        $users = $ldap->getAllUser();        return $this->render('BackBundle:User:list.html.twig', array(            "users" => $users,        ));    }    /**     * @Route("/add", name="back_user_add")     * @param Request $request     */    public function addAction(Request $request)    {        die("User add");    }    /**     * @Route("/edit/{user}", name="back_user_edit")     * @param Request $request     */    public function editAction(Request $request,$user)    {        die("User edit");    }    /**     * @Route("/remove", name="back_user_remove")     * @param Request $request     */    public function removeAction(Request $request)    {        die("User remove");    }}/* *  *  *         $data = null;        $OU = null;        $base = $this->container->getParameter('ldap_base_dn');        $ldap->bind($this->container->getParameter('ldap_search_dn'), $this->container->getParameter('ldap_pass'));        if ($ldap && $base) {            $query = "(&(objectClass=User)(objectClass=person)(!(objectClass=computer)))";            if ($OU == null) {                $tree = $base;            } else {                $tree = "OU=Users," . "OU=" . $OU . "," . $base;            }            $search = $ldap->find($base, $query);        }        dump($search); */